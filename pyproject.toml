[project]
name = "app"
version = "0.1.0"
description = "AskMagna API"
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "pydantic>2.0",
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "sqlmodel<1.0.0,>=0.0.21",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
    "tortoise-orm>=0.21.7",
    "fastapi-pagination>=0.12.32",
    "asyncpg>=0.30.0",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "pytest-asyncio>=0.23.8",
    "coverage<8.0.0,>=7.4.3",
    "ruff>=0.6.7",
    "pre-commit<4.0.0,>=3.6.2",
    "mypy>=1.11.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "deptry>=0.21.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools]
py-modules = ["app"]

[tool.mypy]
files = ["app"]
exclude = ["venv", ".venv", "alembic"]
strict = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]
indent-width = 4
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "YTT",  # flake8-2020
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "SIM",  # flake8-simplify
    "C90",  # mccabe
    "E", "W",   # pycodestyle
    "F",    # pyflakes
    "PGH",  # pygrep-hooks
    "UP",   # pyupgrade
    "RUF",  # ruff
    "TRY",  # tryceratops
]
ignore = [
    "E501",     # line too long, handled by black
    "B008",     # do not perform function calls in argument defaults
    "B904",     # Allow raising exceptions without from e, for HTTPException
    "PGH003",   # Use specific rule codes when ignoring type issues
    "A002",     # Argument `id` is shadowing a Python builtin
    "TRY003",   # Avoid specifying long messages outside the exception class
    "RUF012",   # Mutable class attributes should be annotated with `typing.ClassVar`
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106", "S311"]

[tool.ruff.format]
preview = true
quote-style = "single"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["app"]
